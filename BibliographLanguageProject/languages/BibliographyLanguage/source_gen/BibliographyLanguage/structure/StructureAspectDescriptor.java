package BibliographyLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAuthor = createDescriptorForAuthor();
  /*package*/ final ConceptDescriptor myConceptAuthorsElement = createDescriptorForAuthorsElement();
  /*package*/ final ConceptDescriptor myConceptBiblioElement = createDescriptorForBiblioElement();
  /*package*/ final ConceptDescriptor myConceptBiblioRecord = createDescriptorForBiblioRecord();
  /*package*/ final ConceptDescriptor myConceptBibliography = createDescriptorForBibliography();
  /*package*/ final ConceptDescriptor myConceptPublicationYearElement = createDescriptorForPublicationYearElement();
  /*package*/ final ConceptDescriptor myConceptTitleElement = createDescriptorForTitleElement();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAuthor, myConceptAuthorsElement, myConceptBiblioElement, myConceptBiblioRecord, myConceptBibliography, myConceptPublicationYearElement, myConceptTitleElement);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Author:
        return myConceptAuthor;
      case LanguageConceptSwitch.AuthorsElement:
        return myConceptAuthorsElement;
      case LanguageConceptSwitch.BiblioElement:
        return myConceptBiblioElement;
      case LanguageConceptSwitch.BiblioRecord:
        return myConceptBiblioRecord;
      case LanguageConceptSwitch.Bibliography:
        return myConceptBibliography;
      case LanguageConceptSwitch.PublicationYearElement:
        return myConceptPublicationYearElement;
      case LanguageConceptSwitch.TitleElement:
        return myConceptTitleElement;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAuthor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BibliographyLanguage", "Author", 0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL, 0x125c2423bec6e34bL);
    b.class_(false, false, false);
    b.super_("BibliographyLanguage.structure.BiblioElement", 0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL, 0x125c2423bec6e34aL);
    b.origin("r:4a12139c-8d78-4696-8ac1-fc227d811316(BibliographyLanguage.structure)/1322972126483243851");
    b.version(2);
    b.property("firstName", 0x125c2423bec6e358L).type(PrimitiveTypeId.STRING).origin("1322972126483243864").done();
    b.property("middleName", 0x125c2423bec6e35aL).type(PrimitiveTypeId.STRING).origin("1322972126483243866").done();
    b.property("lastName", 0x125c2423bec6e35dL).type(PrimitiveTypeId.STRING).origin("1322972126483243869").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAuthorsElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BibliographyLanguage", "AuthorsElement", 0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL, 0x125c2423bec6e34cL);
    b.class_(false, false, false);
    b.origin("r:4a12139c-8d78-4696-8ac1-fc227d811316(BibliographyLanguage.structure)/1322972126483243852");
    b.version(2);
    b.aggregate("author", 0x125c2423bec6e363L).target(0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL, 0x125c2423bec6e34bL).optional(false).ordered(true).multiple(true).origin("1322972126483243875").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBiblioElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BibliographyLanguage", "BiblioElement", 0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL, 0x125c2423bec6e34aL);
    b.class_(false, false, false);
    b.origin("r:4a12139c-8d78-4696-8ac1-fc227d811316(BibliographyLanguage.structure)/1322972126483243850");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBiblioRecord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BibliographyLanguage", "BiblioRecord", 0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL, 0x125c2423bec6e349L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4a12139c-8d78-4696-8ac1-fc227d811316(BibliographyLanguage.structure)/1322972126483243849");
    b.version(2);
    b.aggregate("biblioElement", 0x125c2423bec6e352L).target(0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL, 0x125c2423bec6e34aL).optional(false).ordered(true).multiple(true).origin("1322972126483243858").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBibliography() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BibliographyLanguage", "Bibliography", 0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL, 0x125c2423bec6e346L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4a12139c-8d78-4696-8ac1-fc227d811316(BibliographyLanguage.structure)/1322972126483243846");
    b.version(2);
    b.aggregate("biblioRecord", 0x125c2423bec6e350L).target(0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL, 0x125c2423bec6e349L).optional(false).ordered(true).multiple(true).origin("1322972126483243856").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPublicationYearElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BibliographyLanguage", "PublicationYearElement", 0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL, 0x125c2423bec6e34eL);
    b.class_(false, false, false);
    b.super_("BibliographyLanguage.structure.BiblioElement", 0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL, 0x125c2423bec6e34aL);
    b.origin("r:4a12139c-8d78-4696-8ac1-fc227d811316(BibliographyLanguage.structure)/1322972126483243854");
    b.version(2);
    b.property("value", 0x125c2423bec6e356L).type(PrimitiveTypeId.INTEGER).origin("1322972126483243862").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTitleElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BibliographyLanguage", "TitleElement", 0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL, 0x125c2423bec6e34dL);
    b.class_(false, false, false);
    b.origin("r:4a12139c-8d78-4696-8ac1-fc227d811316(BibliographyLanguage.structure)/1322972126483243853");
    b.version(2);
    b.property("value", 0x125c2423bec6e354L).type(PrimitiveTypeId.STRING).origin("1322972126483243860").done();
    return b.create();
  }
}
