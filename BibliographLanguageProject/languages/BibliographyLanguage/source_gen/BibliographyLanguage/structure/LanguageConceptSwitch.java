package BibliographyLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Author = 0;
  public static final int AuthorsElement = 1;
  public static final int BiblioElement = 2;
  public static final int BiblioRecord = 3;
  public static final int Bibliography = 4;
  public static final int PublicationYearElement = 5;
  public static final int TitleElement = 6;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xbb75b69834bf4772L, 0xb67eb9c7faf0daabL);
    builder.put(0x125c2423bec6e34bL, Author);
    builder.put(0x125c2423bec6e34cL, AuthorsElement);
    builder.put(0x125c2423bec6e34aL, BiblioElement);
    builder.put(0x125c2423bec6e349L, BiblioRecord);
    builder.put(0x125c2423bec6e346L, Bibliography);
    builder.put(0x125c2423bec6e34eL, PublicationYearElement);
    builder.put(0x125c2423bec6e34dL, TitleElement);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
